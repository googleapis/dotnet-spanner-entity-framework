// Copyright 2025 Google Inc. All Rights Reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

using Google.Cloud.EntityFrameworkCore.Spanner.Samples.SampleModel;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

/// <summary>
/// This sample shows how to use IDENTITY columns to auto-generate primary key values
/// for an entity.
/// 
/// Run from the command line with `dotnet run AutoGeneratedPrimaryKeySample`
/// </summary>
public static class AutoGeneratedPrimaryKeySample
{
    public static async Task Run(string connectionString)
    {
        using var context = new SpannerSampleDbContext(connectionString);
        // Create a new Singer and Album, add them to the context, and save the changes.
        // Singer and Album use IDENTITY columns for primary key generation, so we don't
        // need to include a value for the ID columns before inserting the rows.
        var singer = new Singer
        {
            FirstName = "Alice",
            LastName = "Jameson",
            Albums = new List<Album>
            {
                new() { Title = "Rainforest" }
            }
        };
        await context.Singers.AddAsync(singer);
        var count = await context.SaveChangesAsync();
        
        // SaveChangesAsync returns the total number of rows that was inserted/updated/deleted.
        // It also automatically populates the generated primary key properties.
        Console.WriteLine($"Added {count} records.");
        Console.WriteLine($"Added a singer with id {singer.SingerId}.");
        Console.WriteLine($"Added an album with id {singer.Albums.First().AlbumId}.");
    }
}
